name: Build and Deploy
on:
  push:
    branches:
      - master
  pull_request_target:
    types:
      - opened
      - synchronize
    branches:
      - master
  workflow_dispatch:
env:
  CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
jobs:
  build:
    name: Build, Test, Deploy and Cover .NET Core
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    env:
      COMMIT_SHA: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Setup dotnet 6.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Display dotnet version
        run: dotnet --version
      - name: Restore
        run: dotnet restore src/PockyBot.NET.sln
      - name: Build
        run: dotnet build src/PockyBot.NET/PockyBot.NET.csproj
      - name: Test
        run: dotnet test src/PockyBot.NET.Tests/PockyBot.NET.Tests.csproj
      - name: Run coverage script
        run: chmod +x ./cover.sh && ./cover.sh
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 10.18.x
      - name: Display node version
        run: node --version
      - name: Run deploy script
        run: chmod +x ./deploy.sh && ./deploy.sh
  build_pr:
    name: Build, Test, Deploy and Cover .NET Core PR
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request_target' }}
    env:
      COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Setup dotnet 6.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Display dotnet version
        run: dotnet --version
      - name: Restore
        run: dotnet restore src/PockyBot.NET.sln
      - name: Build
        run: dotnet build src/PockyBot.NET/PockyBot.NET.csproj
      - name: Test
        run: dotnet test src/PockyBot.NET.Tests/PockyBot.NET.Tests.csproj
      - name: Run coverage script
        run: chmod +x ./cover.sh && ./cover.sh
